name: "Deploy"

on:
  push:
    branches:
      - master
      - helm-redis

jobs:
  ecr-image-push:
    # Build and push a Docker image for zqd.
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - uses: actions/checkout@v1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - env:
          ZQD_ECR_HOST: ${{ secrets.AWS_ECR_HOST }}
        run: |
          make docker-push-ecr
  eks-deploy-test:
    # Deploys this build to a temporary namespace in order to run smoke tests.
    needs: ecr-image-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.15'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - uses: actions/checkout@v1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - run: |
          set -x
          namespace=ci-${{ github.run_number }}
          export ZQD_DATA_URI=s3://zq-ci-test/$(date +%y-%m-%d).${{ github.run_number }}
          export ZQD_ECR_HOST=${{ secrets.AWS_ECR_HOST }}
          aws s3 rm --recursive $ZQD_DATA_URI || : # clear data from previous run
          aws eks --region us-east-2 update-kubeconfig --name zq-test
          kubectl create ns $namespace || :
          kubectl config set-context --current --namespace=$namespace
          helm uninstall zsrv || :
          k8s/generate-srv-secrets.sh
          make helm-install PG_PERSIST=false
          kubectl scale --replicas=4 deployment/zsrv-worker
          kubectl wait --for=condition=Ready --timeout=60s pods/zsrv-postgresql-0
          kubectl wait --for=condition=available --timeout=120s deployment/zsrv-recruiter
          kubectl wait --for=condition=available --timeout=120s deployment/zsrv-root
          kubectl wait --for=condition=available --timeout=120s deployment/zsrv-worker
          make install
          source k8s/zsrv-port-forward.sh
          # There should be 4 workers running now.
          [[ 4 == $(curl http://localhost:8020/recruiter/listfree | jq -r ".workers | length") ]]
          make test-cluster
      - name: Get zqd logs and remove namespace on success or failure
        if: ${{ always() }}
        run: |
          set -x
          ZQD_DATA_URI=s3://zq-ci-test/$(date +%y-%m-%d).${{ github.run_number }}
          mkdir testlog
          kubectl logs --tail -1 -l app.kubernetes.io/name=recruiter > testlog/recruiter.log
          kubectl logs --tail -1 -l app.kubernetes.io/name=root > testlog/root.log
          kubectl logs --tail -1 -l app.kubernetes.io/name=worker > testlog/worker.log
          kubectl delete ns ci-${{ github.run_number }}
      - name: Save logs as artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: eks-testlog
          path: testlog/
  eks-master-deploy:
    # Deploys this build to ci-master namespace so it will be available
    # for manual testing. Only deploy if previous jobs succeed.
    needs: eks-deploy-test
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - uses: actions/checkout@v1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - run: |
          set -x
          export ZQD_DATA_URI=s3://zq-ci-master/manual-test
          export ZQD_ECR_HOST=${{ secrets.AWS_ECR_HOST }}
          aws eks --region us-east-2 update-kubeconfig --name zq-test
          kubectl create ns ci-master || :
          kubectl config set-context --current --namespace=ci-master
          helm uninstall zsrv || :
          make helm-install
