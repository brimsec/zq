apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zqd.fullname" . }}
  labels:
    {{- include "zqd.labels" . | nindent 4 }}
  annotations:
    # This timestamp annotation is added so 'helm update'
    # will always result in yaml changes and trigger an upgrade
    timestamp: "{{ date "20060102150405" .Release.Time }}"
spec:
{{- if eq .Values.personality "recruiter" }}
  replicas: 1
{{- else if eq .Values.personality "worker" }}
  replicas: {{ .Values.workerReplicaCount }}
{{- else }}
  replicas: {{ .Values.rootReplicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "zqd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "zqd.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zqd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/app/zqd"]
          {{- if eq .Values.personality "recruiter" }}
          args: ["listen", "-personality=recruiter", "-l=:9867"] 
          {{- else if eq .Values.personality "worker" }}
          args: ["listen", "-personality=worker", "-l=:9867", "-recruiter={{ .Values.RecruiterAddr }}",
            "-workerhost=$(STATUS_POD_IP)", "-workernode=$(SPEC_NODE_NAME)",] 
          {{- else }}
          args: ["listen", "-l=:9867", "-data={{ .Values.datauri }}", "-recruiter={{ .Values.RecruiterAddr }}"] 
          {{- end }}
          ports:
            - name: http
              containerPort: 9867
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: http
          readinessProbe:
            httpGet:
              path: /status
              port: http
          env:
          - name: STATUS_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SPEC_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          {{- if .Values.useCredSecret }}
          # These environment variables are set from secrets
          # when there is no service account
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                key: aws-region
                name: aws-credentials
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: aws-secret-access-key
                name: aws-credentials
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: aws-access-key-id
                name: aws-credentials
          - name: AWS_SESSION_TOKEN
            valueFrom:
              secretKeyRef:
                key: aws-session-token
                name: aws-credentials
          {{- else }}
          - name: AWS_REGION
            value: "{{ .Values.AWSRegion }}"
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /spaces
              name: spaces-volume
            - mountPath: /tmp
              name: tmp-volume                   
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: spaces-volume
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}
